<div class="card" 
    @onmouseenter=MouseEnter 
    @onmouseleave=MouseLeave>
    <div class="card-body"
         style="
            @($"--vertical-padding:{verticalPadding};")
            @($"--horizontal-padding:{horizontalPadding};")
            @($"--gap:{gap};")">
        @if (Loading) // Loading content
        {
            <div class="d-grid gap-2">
                @for (int i = 0; i < LoadingLines; i++)
                {
                    <Skeleton />
                }
            </div>
        }
        else // Actual content
        {
            @if (CardTitle != null || Title != null)
            {
                <header class="card-title-container">
                    @if (Title != null)
                    {
                        <span class="card-title"
                              style=@($"--title-size:{titleSize}")
                              title=@Title>@Title</span>
                    }
                    @CardTitle
                </header>
            }

            <div class="text-actions-container">
                <p class="card-text">
                    @(CardBody ?? ChildContent)
                </p>

                @if (CardActions != null)
                {
                    <div class="card-actions @showClass">
                        @CardActions
                    </div>
                }
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public RenderFragment? CardTitle { get; set; }

    [Parameter]
    public RenderFragment? CardBody { get; set; }

    [Parameter]
    public RenderFragment? CardActions { get; set; }

    [Parameter]
    public bool Loading { get; set; } = false;

    [Parameter]
    public int LoadingLines { get; set; } = 3;

    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public int Level { get; set; } = 1;

    private string titleSize => Level == 1 ? "x-large" : "large";
    private string verticalPadding => Level == 1 ? "var(--k-gap-small)" : "var(--k-gap-smaller)";
    private string horizontalPadding => Level == 1 ? "var(--k-gap-normal)" : "var(--k-gap-small)";
    private string gap => Level == 1 ? "var(--k-gap-smaller)" : "var(--k-gap-smallest)";
    private string? showClass;

    void MouseEnter(MouseEventArgs e) => showClass = "show";
    void MouseLeave(MouseEventArgs e) => showClass = null;
}