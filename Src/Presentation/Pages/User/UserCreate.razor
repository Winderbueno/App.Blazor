@using Application.Dtos.User;
@using Domain.Enums.User;
@using Domain.Exceptions;

@page "/users/create"
@attribute [Authorize]
@inject IUserService userService
@inject NavigationManager navigation

<h1>@t["user.feature.create"]</h1>

<Container FlexColumn FlexAlign="center" FlexJustify="center">
    <Form Model=form
          OnValidSubmit=ValidSubmit>
        <Container FlexAlign="center">
            <Card Title=@t["user.profile"]>
                <TextField @bind-Value=form.Username Label=@t["user.username"] />

                <SelectField @bind-Value=form.Role
                             Label=@t["common.role"]
                             Options=@(Enum.GetValues<UserRole>())
                             Placeholder=@(t["common.role"] + "...") />
            </Card>

            <Card Title=@t["person.identity"]>
                <Container Grid GridColumns="1fr 1fr">
                    <TextField @bind-Value=form.Email Label=@t["person.mail"] />
                    <TextField @bind-Value=form.Password Label=@t["user.password"] />
                    <TextField @bind-Value=form.PasswordConfirm Label=@t["action.confirm"] DisablePaste/>
                </Container>
            </Card>

            <Button>@t["action.submit"]</Button>
        </Container>
    </Form>
</Container>

 @code {
    [CascadingParameter]
    public ErrorHandler? ErrorHandler { get; set; }

    private UserCreateFormDto form = new();
    private UserAppDto? userCreated = null;

    private async Task ValidSubmit()
    {
        try
        {
            userCreated = await userService.CreateAsync(form);

            if (userCreated != null)
            {
                toaster.AddSuccess(t["event.created"]);
                navigation.NavigateTo("users");
            }
        }
        catch (Exception e) { ErrorHandler!.ProcessError(e); }
    }
}