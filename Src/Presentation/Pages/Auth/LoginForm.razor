@using Presentation.Middlewares.Authentication;

@inject AuthStateProvider auth

<Card Title="@t["auth.sign-in"]">
    <Form Model=form
          OnValidSubmit=SignIn>
         
            <TextField @bind-Value=form.Username
                       Label=@t["user.username"]
                       Placeholder="patate@mail.com" />

            <TextField @bind-Value=form.Password
                       Label=@t["user.password"] />

            <Button>@t["auth.sign-in"]</Button>
     </Form>

     <AuthorizeView>
        <Card Title="Auth User">
            @t["home.hello"] "User = Todo" !
        </Card>
     </AuthorizeView>
</Card>

@code {
    private LoginDto form = new();

    private async Task SignIn()
        => await auth.LoginAsync(form.Username, "patate");

    public class LoginDto
    {
        public string Username { get; set; } = "kevin.gellenoncourt@gmail.com";
        public string Password { get; set; } = "patate";
    }

    public class LoginDtoValidator : AbstractValidator<LoginDto>
    {
        public LoginDtoValidator()
        {
            RuleFor(x => x.Username).NotEmpty().EmailAddress();
            RuleFor(x => x.Password).NotEmpty();
        }
    }
}