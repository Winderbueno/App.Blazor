@using Microsoft.JSInterop
@inherits LayoutComponentBase

@inject IJSRuntime JS
@inject INavMenuService navState

<section @ref=scrollElt
         class="page @(animated ? "animation" : null)"
         style=@pageHeight(navState.Display ? "100dvh" : "100dvh - 56px")>
    <NavMenu @ref="navMenu" MobileHide=navState.Display />
    <main class="content">
        <div>
            <ErrorBoundary @ref="errorBoundary">@Body</ErrorBoundary>
        </div>
    </main>
</section>

@code {
    private ErrorBoundary? errorBoundary;
    private NavMenu? navMenu;
    private string pageHeight(string height) => $"--page-height:calc({height});";
    private bool animated;

    ElementReference scrollElt;

    protected override void OnInitialized() {
        navState.OnDisplayChange += StateHasChanged;
        navState.OnShow += OnShow;
        navState.OnHide += OnHide;
    }

    // Recover ErrorState on route change
    protected override void OnParametersSet() => errorBoundary?.Recover();    

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // Activate scroll detection (every 500 ms)
        if (firstRender)
            await JS.InvokeVoidAsync("onScroll", scrollElt, 500);
    }

    // 
    private void OnShow()
    {
        animated = true;
        navMenu!.HideItems();
    }

    private void OnHide() => animated = false;
}