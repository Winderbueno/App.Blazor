@using Presentation.Shared.Containers.Form.Abstract;

@inherits Field<string>

<div class="field-wrapper">
    
    <label>@Label</label>

    <InputText class="form-control"
               placeholder=@Placeholder
               disabled=@Disabled
               onpaste=@(DisablePaste ? "return false;":"")
               @oninput=WrappedOnInput
               @onblur=OnBlur
               Value=@Value
               ValueChanged=ValueChanged
               ValueExpression=ValueExpression />    

    <ValidationMessage For=ValueExpression />
</div>

@code {
    [Parameter]
    public bool DisablePaste { get; set; } = false;

    [Parameter]
    public bool BindOnInput { get; set; } = false;

    [Parameter]
    public TimerCallback? OnInputDelayed { get; set; }

    [Parameter]
    public int Delay { get; set; } = 500;

    private Timer? Timer;

    private void WrappedOnInput(ChangeEventArgs e)
    {
        if (BindOnInput) ValueChanged.InvokeAsync((string?)e.Value);
        if (OnInputDelayed != null) {
            if (Timer == null) Timer = new Timer(OnInputDelayed!, null, Delay, 0);
            else Timer!.Change(Delay, 0);
        }
        OnInput.InvokeAsync(e);
    }
}